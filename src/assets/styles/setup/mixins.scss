/* Breakpoint mixins */

@mixin for-mobile-layout {
    @media (max-width: calc(#{$mobile-breakpoint} + 48px)) {
        @content;
    }
}

@mixin for-narrow-layout {
    @media (min-width: calc(#{$narrow-breakpoint} + 80px)) {
        @content;
    }
}

@mixin for-normal-layout {
    @media (min-width: calc(#{$normal-breakpoint} + 80px)) {
        @content;
    }
}

@mixin for-wide-layout {
    @media (min-width: calc(#{$wide-breakpoint} + 160px)) {
        @content;
    }
}

@mixin for-below-narrow-layout {
    @media (max-width: calc(#{$narrow-breakpoint} - 1px)) {
        @content;
    }
}

/* Media Mixins */
@mixin aspect-ratio($width, $height) {
    position: relative;
    overflow: hidden;

    &::before {
        display: block;
        content: "";
        width: 100%;
        padding-top: calc((#{$height} / #{$width}) * 100%);
    }

    >* {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
    }

    >img {
        height: 100%;
        object-fit: cover;
    }
}

// Mixin for removing hover effects on iPhone screen
@mixin hover-supported {
    @media not all and (pointer: coarse) {
        &:hover {
            @content;
        }
    }
}

@mixin on-circle($item-count, $circle-size, $item-size) {
    // position: relative;
    width: $circle-size;
    height: $circle-size;
    padding: 0;
    // border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    // overflow: hidden;

    >* {
        display: flex;
        justify-content: center;
        align-items: center;
        position: absolute;
        width: $item-size;
        height: $item-size;
        margin: -($item-size / 2);
        $angle: 360deg / $item-count;

        @for $i from 1 through $item-count {
            $rot: $angle * ($i - 1);

            &:nth-of-type(#{$i}) {
                transform: rotate($rot) translate(0.5 * $circle-size - 0.5*$item-size) rotate(-$rot);
            }
        }
    }
}